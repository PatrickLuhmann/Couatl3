// <auto-generated />
using System;
using Couatl3.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Couatl3.Migrations
{
    [DbContext(typeof(CouatlContext))]
    [Migration("20181207223038_Migration_01")]
    partial class Migration_01
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687");

            modelBuilder.Entity("Couatl3.Models.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Cash");

                    b.Property<bool>("Closed");

                    b.Property<string>("Institution");

                    b.Property<string>("Name");

                    b.HasKey("AccountId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Couatl3.Models.LotAssignment", b =>
                {
                    b.Property<int>("LotAssignmentId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BuyTransactionId");

                    b.Property<decimal>("Quantity");

                    b.Property<int>("SellTransactionId");

                    b.HasKey("LotAssignmentId");

                    b.HasIndex("BuyTransactionId");

                    b.HasIndex("SellTransactionId");

                    b.ToTable("LotAssignments");
                });

            modelBuilder.Entity("Couatl3.Models.Position", b =>
                {
                    b.Property<int>("PositionId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AccountId");

                    b.Property<decimal>("Quantity");

                    b.Property<int>("SecurityId");

                    b.HasKey("PositionId");

                    b.HasIndex("AccountId");

                    b.HasIndex("SecurityId");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("Couatl3.Models.Price", b =>
                {
                    b.Property<int>("PriceId")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<bool>("Closing");

                    b.Property<DateTime>("Date");

                    b.Property<int>("SecurityId");

                    b.HasKey("PriceId");

                    b.HasIndex("SecurityId");

                    b.ToTable("Prices");
                });

            modelBuilder.Entity("Couatl3.Models.Security", b =>
                {
                    b.Property<int>("SecurityId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("Symbol");

                    b.HasKey("SecurityId");

                    b.ToTable("Securities");
                });

            modelBuilder.Entity("Couatl3.Models.Transaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccountId");

                    b.Property<DateTime>("Date");

                    b.Property<decimal>("Fee");

                    b.Property<decimal>("Quantity");

                    b.Property<int?>("SecurityId");

                    b.Property<int>("Type");

                    b.Property<decimal>("Value");

                    b.HasKey("TransactionId");

                    b.HasIndex("AccountId");

                    b.HasIndex("SecurityId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Couatl3.Models.LotAssignment", b =>
                {
                    b.HasOne("Couatl3.Models.Transaction", "BuyTransaction")
                        .WithMany()
                        .HasForeignKey("BuyTransactionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Couatl3.Models.Transaction", "SellTransaction")
                        .WithMany()
                        .HasForeignKey("SellTransactionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Couatl3.Models.Position", b =>
                {
                    b.HasOne("Couatl3.Models.Account")
                        .WithMany("Positions")
                        .HasForeignKey("AccountId");

                    b.HasOne("Couatl3.Models.Security", "Security")
                        .WithMany()
                        .HasForeignKey("SecurityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Couatl3.Models.Price", b =>
                {
                    b.HasOne("Couatl3.Models.Security", "Security")
                        .WithMany()
                        .HasForeignKey("SecurityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Couatl3.Models.Transaction", b =>
                {
                    b.HasOne("Couatl3.Models.Account", "Account")
                        .WithMany("Transactions")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Couatl3.Models.Security", "Security")
                        .WithMany()
                        .HasForeignKey("SecurityId");
                });
#pragma warning restore 612, 618
        }
    }
}
